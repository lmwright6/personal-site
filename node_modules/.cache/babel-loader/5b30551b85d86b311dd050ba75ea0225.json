{"ast":null,"code":"var _jsxFileName = \"/Users/laurenwright/Dev/personal-site/src/pages/About.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { WatchableSubject, useWatchable } from '@shortwave/watchable'; // Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CounterService {\n  constructor() {\n    this.state = WatchableSubject.of(0);\n  }\n\n  // Return a Watchable here as it's the readonly version.\n  value() {\n    return this.state;\n  }\n\n  increment() {\n    this.state.update(this.state.getValue() + 1);\n  }\n\n}\n\nconst About = () => {\n  _s();\n\n  const service = React.useMemo(() => new CounterService(), []);\n  const value = useWatchable(service.value());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value === null ? 'Loading...' : `Counter value: ${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => service.increment(),\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(About, \"CiilKcfX02Ge0LC/CoAN1hLPEuk=\", false, function () {\n  return [useWatchable];\n});\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/laurenwright/Dev/personal-site/src/pages/About.tsx"],"names":["React","WatchableSubject","useWatchable","CounterService","state","of","value","increment","update","getValue","About","service","useMemo"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,gBAAR,EAAqCC,YAArC,QAAwD,sBAAxD,C,CAGA;;;;AACA,MAAMC,cAAN,CAAqB;AAAA;AAAA,SACXC,KADW,GACHH,gBAAgB,CAACI,EAAjB,CAAoB,CAApB,CADG;AAAA;;AAGnB;AACAC,EAAAA,KAAK,GAAsB;AACzB,WAAO,KAAKF,KAAZ;AACD;;AAEDG,EAAAA,SAAS,GAAS;AAChB,SAAKH,KAAL,CAAWI,MAAX,CAAkB,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,CAA1C;AACD;;AAVkB;;AAarB,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAM,IAAIT,cAAJ,EAApB,EAA0C,EAA1C,CAAhB;AACE,QAAMG,KAAK,GAAGJ,YAAY,CAACS,OAAO,CAACL,KAAR,EAAD,CAA1B;AACA,sBACE;AAAA,4BACE;AAAA,gBACGA,KAAK,KAAK,IAAV,GAAiB,YAAjB,GAAiC,kBAAiBA,KAAM;AAD3D;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMK,OAAO,CAACJ,SAAR,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAbD;;GAAMG,K;UAEUR,Y;;;KAFVQ,K;AAeN,eAAeA,KAAf","sourcesContent":["\nimport * as React from 'react';\nimport {WatchableSubject, Watchable, useWatchable} from '@shortwave/watchable';\n\n\n// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nclass CounterService {\n  private state = WatchableSubject.of(0);\n\n  // Return a Watchable here as it's the readonly version.\n  value(): Watchable<number> {\n    return this.state;\n  }\n\n  increment(): void {\n    this.state.update(this.state.getValue() + 1);\n  }\n}\n\nconst About = () => {\nconst service = React.useMemo(() => new CounterService(), []);\n  const value = useWatchable(service.value());\n  return (\n    <div>\n      <p>\n        {value === null ? 'Loading...' : `Counter value: ${value}`}\n      </p>\n      <p>\n        <button onClick={() => service.increment()}>Click me!</button>\n      </p>\n    </div>\n  );\n}\n\nexport default About;"]},"metadata":{},"sourceType":"module"}