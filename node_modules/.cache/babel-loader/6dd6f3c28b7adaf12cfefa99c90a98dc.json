{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/laurenwright/Dev/personal-site/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _classCallCheck from\"/Users/laurenwright/Dev/personal-site/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/laurenwright/Dev/personal-site/node_modules/@babel/runtime/helpers/esm/createClass.js\";var _templateObject;import*as React from'react';import{WatchableSubject,useWatchable}from'@shortwave/watchable';import styled from'styled-components';// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CounterService=/*#__PURE__*/function(){function CounterService(){_classCallCheck(this,CounterService);this.state=WatchableSubject.of(0);}_createClass(CounterService,[{key:\"value\",value:// Return a Watchable here as it's the readonly version.\nfunction value(){return this.state;}},{key:\"increment\",value:function increment(){this.state.update(this.state.getValue()+1);}}]);return CounterService;}();// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nvar BoolService=/*#__PURE__*/function(){function BoolService(){_classCallCheck(this,BoolService);this.state=WatchableSubject.of(false);}_createClass(BoolService,[{key:\"value\",value:// Return a Watchable here as it's the readonly version.\nfunction value(){return this.state;}},{key:\"toggle\",value:function toggle(){this.state.update(!this.state.getValue());}}]);return BoolService;}();var AboutWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin: 20px;\\n\"])));var About=function About(){var service=React.useMemo(function(){return new CounterService();},[]);var value=useWatchable(service.value());var boolService=React.useMemo(function(){return new BoolService();},[]);var boolValue=useWatchable(boolService.value());return/*#__PURE__*/_jsxs(AboutWrapper,{children:[/*#__PURE__*/_jsx(\"p\",{children:value===null?'Loading...':\"Counter value: \".concat(value)}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return service.increment();},children:\"Click me!\"})}),/*#__PURE__*/_jsx(\"p\",{children:boolValue===null?'Loading...':\"Counter value: \".concat(boolValue)}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return boolService.toggle();},children:\"Click me!\"})})]});};export default About;","map":{"version":3,"sources":["/Users/laurenwright/Dev/personal-site/src/pages/About.tsx"],"names":["React","WatchableSubject","useWatchable","styled","CounterService","state","of","update","getValue","BoolService","AboutWrapper","div","About","service","useMemo","value","boolService","boolValue","increment","toggle"],"mappings":"mZACA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,gBAAR,CAAqCC,YAArC,KAAwD,sBAAxD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA;2FACMC,CAAAA,c,6FACIC,K,CAAQJ,gBAAgB,CAACK,EAAjB,CAAoB,CAApB,C,kDAEhB;AACA,gBAA2B,CACzB,MAAO,MAAKD,KAAZ,CACD,C,yBAED,oBAAkB,CAChB,KAAKA,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,QAAX,GAAwB,CAA1C,EACD,C,8BAEH;GACMC,CAAAA,W,uFACIJ,K,CAAQJ,gBAAgB,CAACK,EAAjB,CAAoB,KAApB,C,+CAEhB;AACA,gBAA4B,CAC1B,MAAO,MAAKD,KAAZ,CACD,C,sBAED,iBAAe,CACb,KAAKA,KAAL,CAAWE,MAAX,CAAkB,CAAC,KAAKF,KAAL,CAAWG,QAAX,EAAnB,EACD,C,2BAGH,GAAME,CAAAA,YAAY,CAAGP,MAAM,CAACQ,GAAV,sFAAlB,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CACpB,GAAMC,CAAAA,OAAO,CAAGb,KAAK,CAACc,OAAN,CAAc,iBAAM,IAAIV,CAAAA,cAAJ,EAAN,EAAd,CAA0C,EAA1C,CAAhB,CACE,GAAMW,CAAAA,KAAK,CAAGb,YAAY,CAACW,OAAO,CAACE,KAAR,EAAD,CAA1B,CACA,GAAMC,CAAAA,WAAW,CAAGhB,KAAK,CAACc,OAAN,CAAc,iBAAM,IAAIL,CAAAA,WAAJ,EAAN,EAAd,CAAuC,EAAvC,CAApB,CACA,GAAMQ,CAAAA,SAAS,CAAGf,YAAY,CAACc,WAAW,CAACD,KAAZ,EAAD,CAA9B,CACA,mBACE,MAAC,YAAD,yBACE,mBACGA,KAAK,GAAK,IAAV,CAAiB,YAAjB,0BAAkDA,KAAlD,CADH,EADF,cAIE,gCACE,eAAQ,OAAO,CAAE,yBAAMF,CAAAA,OAAO,CAACK,SAAR,EAAN,EAAjB,uBADF,EAJF,cAQE,mBACGD,SAAS,GAAK,IAAd,CAAqB,YAArB,0BAAsDA,SAAtD,CADH,EARF,cAWE,gCACE,eAAQ,OAAO,CAAE,yBAAMD,CAAAA,WAAW,CAACG,MAAZ,EAAN,EAAjB,uBADF,EAXF,GADF,CAiBD,CAtBD,CAwBA,cAAeP,CAAAA,KAAf","sourcesContent":["\nimport * as React from 'react';\nimport {WatchableSubject, Watchable, useWatchable} from '@shortwave/watchable';\nimport styled from 'styled-components';\n\n// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nclass CounterService {\n  private state = WatchableSubject.of(0);\n\n  // Return a Watchable here as it's the readonly version.\n  value(): Watchable<number> {\n    return this.state;\n  }\n\n  increment(): void {\n    this.state.update(this.state.getValue() + 1);\n  }\n}\n// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nclass BoolService {\n  private state = WatchableSubject.of(false);\n\n  // Return a Watchable here as it's the readonly version.\n  value(): Watchable<boolean> {\n    return this.state;\n  }\n\n  toggle(): void {\n    this.state.update(!this.state.getValue());\n  }\n}\n\nconst AboutWrapper = styled.div`\n    margin: 20px;\n`;\nconst About = () => {\nconst service = React.useMemo(() => new CounterService(), []);\n  const value = useWatchable(service.value());\n  const boolService = React.useMemo(() => new BoolService(), []);\n  const boolValue = useWatchable(boolService.value());\n  return (\n    <AboutWrapper>\n      <p>\n        {value === null ? 'Loading...' : `Counter value: ${value}`}\n      </p>\n      <p>\n        <button onClick={() => service.increment()}>Click me!</button>\n      </p>\n\n      <p>\n        {boolValue === null ? 'Loading...' : `Counter value: ${boolValue}`}\n      </p>\n      <p>\n        <button onClick={() => boolService.toggle()}>Click me!</button>\n      </p>\n    </AboutWrapper>\n  );\n}\n\nexport default About;"]},"metadata":{},"sourceType":"module"}