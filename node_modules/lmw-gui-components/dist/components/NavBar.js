"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("core-js/modules/web.dom-collections.iterator.js");

var React = _interopRequireWildcard(require("react"));

require("./styles/NavBar.css");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRouterDom = require("react-router-dom");

var _MenuList = _interopRequireDefault(require("@mui/material/MenuList"));

var _MenuItem = _interopRequireDefault(require("@mui/material/MenuItem"));

var _Menu = _interopRequireDefault(require("@mui/icons-material/Menu"));

var _Paper = _interopRequireDefault(require("@mui/material/Paper"));

var _Popover = _interopRequireDefault(require("@mui/material/Popover"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const NavBar = props => {
  const [anchorEl, setAnchorEl] = React.useState(null);

  const handleClick = event => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  const open = Boolean(anchorEl);
  const id = open ? 'simple-popover' : undefined;
  return /*#__PURE__*/React.createElement("header", {
    className: "navigation",
    style: {
      backgroundColor: props.backgroundColor
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "left"
  }, /*#__PURE__*/React.createElement("a", {
    style: {
      color: props.fontColor
    }
  }, props.name)), /*#__PURE__*/React.createElement("div", {
    className: "right"
  }, /*#__PURE__*/React.createElement(_Menu.default, {
    ref: anchorEl,
    onClick: handleClick,
    sx: {
      fontSize: 30,
      color: props.fontColor
    }
  }), /*#__PURE__*/React.createElement(_Popover.default, {
    id: id,
    open: open,
    anchorEl: anchorEl,
    onClose: handleClose,
    anchorOrigin: {
      vertical: 'bottom',
      horizontal: 'left'
    }
  }, /*#__PURE__*/React.createElement(_Paper.default, {
    elevation: 6
  }, /*#__PURE__*/React.createElement(_MenuList.default, {
    style: {}
  }, props.links.map(linkObj => {
    return /*#__PURE__*/React.createElement(_MenuItem.default, null, /*#__PURE__*/React.createElement(_reactRouterDom.Link, {
      className: "link-items",
      style: {
        color: props.fontColor
      },
      to: linkObj.path
    }, linkObj.title));
  }))))));
};

NavBar.propTypes = {
  name: _propTypes.default.string,
  links: _propTypes.default.arrayOf(Object),
  backgroundColor: _propTypes.default.string,
  fontColor: _propTypes.default.string
};
NavBar.defaultProps = {
  name: "Lauren Wright",
  link: [{
    title: "Home",
    path: "/"
  }],
  backgroundColor: "white",
  fontColor: "black"
};
var _default = NavBar;
exports.default = _default;